#ifndef DEFINITIONS_H_
#define DEFINITIONS_H_
#include <XInput.h>
#include "glsMath.h"

static float EPSILON = 3.4526698307252027193509668742125e-04F;

// DEBUG COLORS
static float PLAYER_COLOR_R = 0.0f;
static float PLAYER_COLOR_G = 0.0f;
static float PLAYER_COLOR_B = 1.0f;

static float HEALTHPICKUP_COLOR_R = 1.0f;
static float HEALTHPICKUP_COLOR_G = 1.0f;
static float HEALTHPICKUP_COLOR_B = 0.0f;

static float ENEMY_COLOR_R = 1.0f;
static float ENEMY_COLOR_G = 0.0f;
static float ENEMY_COLOR_B = 0.0f;

static float MOON_COLOR_R = 0.51f;
static float MOON_COLOR_G = 0.30f;
static float MOON_COLOR_B = 0.0f;

static float PROJECTILE_COLOR_R = 0.0f;
static float PROJECTILE_COLOR_G = 1.0f;
static float PROJECTILE_COLOR_B = 0.0f;

static float DEPOT_SHIELD_COLOR_R = 1.0f;
static float DEPOT_SHEILD_COLOR_G = 0.0f;
static float DEPOT_SHIELD_COLOR_B = 0.0f;

// OBJECT FACTORY
#define MAX_PLAYERS					1
#define MAX_CAMERAS					1
#define MAX_BULLETS_PLAYER			500
#define MAX_BULLETS_ENEMY			100
#define MAX_ENEMY_SMALL				500
#define MAX_ENEMY_MEDIUM			50
#define MAX_ENEMY_LARGE				10
#define MAX_CRATES					10
#define MAX_ACIDPOOLS				10
#define MAX_DEPOTS					6
#define MAX_LASERTRAPS				10
#define MAX_S_HEALTH_PICKUPS		25// small hp
#define MAX_L_HEALTH_PICKUPS		6// large hp
#define MAX_BARRELS					10
#define MAX_LEVELS					1
#define	MAX_SHIELDS					20
#define MAX_EXPLOSION				500
#define MAX_EMP						500
#define MAX_MORTAR					500
#define MAX_REDSTRIKE				25
#define MAX_BLUESTRIKE				50
#define MAX_LANDINGPADS				2

// IENTITY ALIVE FLAGS
#define IS_ACTIVE					1
#define IS_ALIVE					2

// PLAYER STUFFS
static float HEALTH_PICKUP_BLINKING_TIME		= 0.2f;

// HEALTH STATS
static unsigned int MAX_LIVES_PLAYER			= 3;
static unsigned int MAX_HP_PLAYER				= 100;
static unsigned int MAX_HP_SMALL_ENEMY			= 4;
static unsigned int MAX_HP_LARGE_ENEMY			= 100;
static unsigned int MAX_HP_MED_ENEMY			= 50;
static unsigned int MAX_HP_BARREL				= 100;
static unsigned int MAX_HP_DEPOT				= 100;
static unsigned int MAX_HP_CRATE				= 100;
static unsigned int MAX_HP_LASER				= 100;
static unsigned int MAX_HP_POOL					= 100;
static unsigned int MAX_HP_SHIELD				= 125;

// WEAPON STATS
static unsigned int MAX_RED_AMMO				= 1;
static unsigned int MAX_YELLOW_AMMO				= 80;
static unsigned int MAX_BLUE_AMMO				= 50;
static unsigned int BLUE_DAMAGE					= 6;
static unsigned int YELLOW_DAMAGE				= 5;
static unsigned int RED_DAMAGE					= 5;
static unsigned int CONSUMED_DAMAGE				= 6;
static unsigned int LARGE_HP_VALUE				= 50;
static unsigned int SMALL_HP_VALUE				= 25;
static unsigned int EXPLOSION_DAMAGE			= 15;

// ANIMATIONS
#define AM_MAX_ANIMS				10
#define AM_MAX_EFFECTS_ANIMS		8

// DAMAGES
static float PUSH_COOLDOWN				= 3.5f;
static float PULL_COOLDOWN				= 1.5f;

#define MAX_NUM_WAVES 2;


// EXPERIENCE VALUES
static unsigned int EXP_YELLOW_LVL1				= 100;
static unsigned int EXP_YELLOW_LVL2				= 200;
static unsigned int EXP_YELLOW_LVL3				= 300;
static unsigned int EXP_BLUE_LVL1				= 100;
static unsigned int EXP_BLUE_LVL2				= 200;
static unsigned int EXP_BLUE_LVL3				= 300;
static unsigned int EXP_RED_LVL1				= 100;
static unsigned int EXP_RED_LVL2				= 200;
static unsigned int EXP_RED_LVL3				= 300;
static unsigned int EXP_SMALL_ENEMY				= 5;
static unsigned int EXP_MEDIUM_ENEMY			= 10;
static unsigned int EXP_LARGE_ENEMY				= 25;
static unsigned int EXP_DEPOT					= 36;
// SMALL_ENEMIES
static float SMALL_ENEMY_TIMER_DEATH			= 1.5f;
static float SMALL_ENEMY_BLACK_BLINK_RATE		= 0.2f;
static float SMALL_ENEMY_TIMER_STUN				= 1.3f;
static float SMALL_ENEMY_TIMER_PUSHED			= 0.5f;
static unsigned int SMALL_ENEMY_BLACK_CHANCE	= 5;
static unsigned int SMALL_ENEMY_DMG				= 5;
static float SMALL_ENEMY_SPEED_BEING_PUSHED		= 40.0f;
static float SMALL_ENEMY_SPEED_BEING_PULLED		= 45.0f;
static float SMALL_ENEMY_SPEED_MOVE				= 15.0f;

// MEDIUM_ENEMIES
static float MEDIUM_ENEMY_SPEED_MOVE		= 15.0f;
static float MEDIUM_ENEMY_TIMER_DEATH		= 1.5f;
static float MEDIUM_ENEMY_TIMER_HURT		= 0.2f;

enum eEntityType
{
	ET_PLAYER = 0,ET_SMALLENEMY,ET_MEDIUMENEMY,ET_LARGEENEMY,ET_BOSSENEMY,ET_REDBARREL,
	ET_DEPOT,ET_CRATE,ET_LASERTRAP,ET_ACIDPOOL,ET_SHIELD,ET_EXPLOSION,ET_BULLET_PLAYER,ET_LASER,ET_BULLET_ENEMY,ET_WORLD,
	ET_CAMERA,ET_HEALTH_PICKUP_SMALL,ET_HEALTH_PICKUP_LARGE,ET_TEST_OBJ,ET_PULL,ET_PUSH,ET_SKYBOX,ET_EMP, ET_LIGHT_POLE,
	ET_MORTAR, ET_REDSTRIKE, ET_BLUESTRIKE, ET_LANDINGPAD, ET_ASTEROID, ET_PLANET, ET_SUN, ET_LASER_BALL,
	ET_NUMTYPES,
};


enum eEmitterTypes { EMITTER_PULL, EMITTER_PUSH, EMITTER_EXPLOSION, EMITTER_POWERUP, EMITTER_PLAYER_DAMAGE, EMITTER_ENEMY_DAMAGE,
					 EMITTER_BEACON,EMITTER_CRATE_BEACON, EMITTER_LASER, EMITTER_SMOKE, GEO_EMITTER_SCALING_BOX, GEO_EMITTER_BEACON,
					 GEO_EMITTER_QUAD_PLAYER, GEO_EMITTER_QUAD_MED_ENEMY, GEO_EMITTER_BULLET_TRAIL, GEO_EMITTER_BLOOD_POOL, 
					 GEO_EMITTER_HP_ARROW, GEO_EMITTER_ENERGY_RING, MAX_EMITTER_TYPES };

enum eGeoVFXTypes { GEO_SCALING_BOX = 0, GEO_SCALING_CONE, GEO_BEACON, GEO_QUAD_PLAYER_MUZZLE, GEO_QUAD_MED_MUZZLE, 
					GEO_QUAD_BULLET_TRAIL, GEO_QUAD_BLOOD_POOL, GEO_QUAD_HP_ARROW, GEO_QUAD_ENERGY_RING, MAX_GEO_FXTYPES};

enum eEntityGroups
{
	EG_STATIC = 0, EG_NONSTATIC,
	EG_NUM_TYPES,
};

enum eDifficulty { EASY_DIFF, NORMAL_DIFF,HARD_DIFF,TOTAL_DIFF};
enum eRenderGroups
{
	RG_MODELS, RG_BULLETS, RG_ENVIRONMENT, RG_TRANSPARENT, RG_NUM_GROUPS,
};

enum controllerButtons { A = XINPUT_GAMEPAD_A, B = XINPUT_GAMEPAD_B, X = XINPUT_GAMEPAD_X, Y = XINPUT_GAMEPAD_Y,
						START = XINPUT_GAMEPAD_START, BACK = XINPUT_GAMEPAD_BACK,
						D_UP = XINPUT_GAMEPAD_DPAD_UP, D_DOWN = XINPUT_GAMEPAD_DPAD_DOWN, 
						D_LEFT = XINPUT_GAMEPAD_DPAD_LEFT, D_RIGHT = XINPUT_GAMEPAD_DPAD_RIGHT,
						LEFT_BUMPER = XINPUT_GAMEPAD_LEFT_SHOULDER, RIGHT_BUMPER = XINPUT_GAMEPAD_RIGHT_SHOULDER,
						CLICK_LEFT_STCIK = XINPUT_GAMEPAD_LEFT_THUMB, CLICK_RIGHT_STICK = XINPUT_GAMEPAD_RIGHT_THUMB
					   };

enum eCollisionEntityTypes {eSphere, eCapsule, eAABB, eOBB, eFrustum, eSegment, ePlane, eNum_BoundingVolumes};

enum FrustumCorners{ eFTL = 0, eFBL, eFBR, eFTR, eNTL, eNTR, eNBR, eNBL };
enum FrustumPlanes{ eNEAR_PLANE = 0, eFAR_PLANE, eLEFT_PLANE, eRIGHT_PLANE, eTOP_PLANE, eBOTTOM_PLANE };

enum eGameStates{	INTRO_SPLASH_STATE, INTRO_STATE, MAINMENU_STATE,GAMEPLAY_STATE,DIFFICULTY_STATE, OPTIONS_STATE,
					CREDITS_STATE,PAUSE_STATE,RETRY_STATE, WIN_STATE, LOSE_STATE, ANIM_STATE, TUTORIAL_STATE,
					TUTORIAL_GAMEPLAY_STATE, TUTORIAL_PAUSE_STATE, TUTORIAL_MENU_STATE, HELP_STATE, QUITGAME_STATE, NUM_STATES};

enum eWeapons { RED, YELLOW, BLUE, BLACK, EMPTY };
enum eShieldColors { RED_SHIELD,YELLOW_SHIELD,BLUE_SHIELD,EFFECTIVE_SHIELD,INEFFECTIVE_SHIELD,NUM_SHIELDS };

//enum eVFXTypes {TEST = 0, FIRE,SMOKE, SPARK,EXPLODE, GEO_EFFECT};

enum eShaders{ TEXTURE_ONLY, SKYBOX, CUBE_MAP, ANIMATED_ONLY, NO_TEX_DIR_LIGHT, TEX_DIR_LIGHT, TEX_POINT_LIGHT, RIPPLE_EFFECT, BILLBOARD, DISSOLVE, SCROLLING_UV, ANIMATED_DIR, ANIMATED_POINT, NUM_SHADERS };
enum eTriangleBatches { BOX_SHAPE_TB, PLAYER_SHAPE_TB, SMALL_ENEMY_SHAPE_TB, MEDIUM_ENEMY_SHAPE_TB, LARGE_ENEMY_SHAPE_TB, BOSS_ENEMY_SHAPE_TB, TEST_BULLET_TB, PLANET_SHAPE_TB, MINING_STATION_TB,
	PULL_CONE_TB, LASER_SHAPE_TB, BARREL_SHAPE_TB, CRATE_TB, SCALING_BOX_TB, SCALING_CONE_TB, EXPLOSION_TB, SHIELD_TB, PUSH_TB,
	PARTICLE_TB, EMP_TARGETER_TB, LIGHT_POLE_TB, MORTAR_BASIC_TB, MORTAR_FINALBLAST_TB, BLUE_STRIKE_TB, LANDING_PAD_TB, HEALTHPICKUP_TB, 
	ASTEROID_TB,
	GEO_QUAD_TB, GEO_BEACON_TB, MAX_TB };
	


// Player animations
enum ePlayerAnims { PL_WALK = 0, PL_WALKBACK, PL_STRAFE_R, PL_STRAFE_L, PL_DEATH, PL_HURT, PL_IDLE, PL_WIN, PL_LOSE };

enum eDepotAnims { DepotAnim_Activate, DepotAnim_Deactivate, DepotAnim_Deactivated_Idle };

enum eLargeEnemyAnims { LARGE_IDLE, LARGE_ALPHA, LARGE_DEATH };

// Medium animations
enum eMedEnemyAnims { MEDIUM_MOVE_FORWARD = 0, MEDIUM_MOVE_BACKWARDS, MEDIUM_MOVE_LEFT, MEDIUM_MOVE_RIGHT, MEDIUM_FIREPLASMA, MEDIUM_FIREMORTAR, MEDIUM_HURT };

enum eTextures { /*M_ARROW*/
	M_SLIDE_BAR, M_SLIDE_POINTER, G_RETICULE, H_HEALTH_BAR_FRAME, H_AMMO_BAR_FILL, H_HEALTH_BAR_FILL, H_EMPTY_GUN, H_LIVES_BAR_FILL, H_WAVE1, H_PLASMA_BALL_ICON, H_SHOTGUN_ICON, 
	H_YELLOW_BAR_FILL, H_LASER_BEAM_ICON, H_BLUE_BAR_FILL, H_WAVE2, H_WAVE3, HUD_WAVE1_TEX, HUD_WAVE2_TEX, HUD_WAVE3_TEX, H_GUAGE, H_GUAGE_NEEDLE, H_PULL_GUAGE, H_PULL_NEEDLE,
	LIVES_TOKENS, ONE_DEPOT_LEFT, NUMBER_ONE, H_WAVE, H_PICKUP_NOTIFY, M_CREDITS_TEXT, H_LIVES_LABEL, H_HEALTH_BAR_LABEL, H_AMMO_BAR_LABEL, TX_TEST_SPEC, WAVE_MANAGER_WAVE_COMPLETE,
	ONSLAUGHT_MODE, ICON_WEAPON_LEVEL1, ICON_WEAPON_LEVEL2, ICON_WEAPON_LEVEL3, ICON_WEAPON_LEVELBAR, TEST_VFX_TEXTURE, WEAPONS_COOLDOWN, WEAPON_LEVEL_TAB, H_XPBAR,
	H_TAB_LVL1, H_TAB_LVL2, H_TAB_LVL3, HUD_FRAME,

	MENU_MOVEMENT, MENU_MOVEMENT_CONTROLLER, MENU_OK, MENU_OK_CONTROLLER, MENU_BACK, MENU_BACK_CONTROLLER, MENU_ALL3, MENU_ALL3_CONTROLLER,


	//Level Up stuff - Tom
	HUD_LEVELUP_TEXT_TEXTURE,
	HUD_RED_LEVELUP_ICON_TEXTURE,
	HUD_BLUE_LEVELUP_ICON_TEXTURE,
	HUD_YELLOW_LEVELUP_ICON_TEXTURE,
	PUSHCD_FILL, PUSHCD_BG, HELP_MENU,

	CONTROLLER_HELP, KEYBOARD_HELP,
	
	/*TUTORIAL*/
	H_TUTORIAL_ESC, H_TUTORIAL_PUSH, H_TUTORIAL_BOX, H_TuTORIAL_BOX_CHECKED, H_TUTORIAL_HIGHLIGHT,
	H_TUTORIAL_PULL, H_TUTORIAL_AMMOTYPE, H_TUTORIAL_COMPLETE, TUTORIAL_HEALTH_BAR, TUTORIAL_AMMO_AMOUNT,
	TUTORIAL_HEALTH_INDICATOR, TUTORIAL_LIFE_INDICATOR, TUTORIAL_SHOOT_RED, TUTORIAL_SHOOT_YELLOW, TUTORIAL_LIVES_TEXT,
	TUTORIAL_SHOOT_BLUE, TUTORIAL_HEALTH_PICKUP, TUTORIAL_RED_WEAPON, TUTORIAL_YELLOW_WEAPON, TUTORIAL_BLUE_WEAPON,
	TUTORIAL_BLACK_WEAPON, TUTORIAL_DEPOT, TUTORIAL_LANDING_PAD, TUTORIAL_LERP_PUSH_HIGHLIGHT, TUTORIAL_ARROW, TUTORIAL_HEALTH_TEXT,
	TUTORIAL_TAB, TUTORIAL_AMMOTYPE_TEXT, TUTORIAL_AMMOAMOUNT_TEXT, TUTORIAL_WEAPON_LEVEL, TUTORIAL_PURPLE_SHIELD, TUTORIAL_TEXT,

	/*NEW ASSETS*/
	T_HEALTHPICKUP, T_ARROW_RIGHT,

	/*NUMBERS*/
	NUMBER_TWO, NUMBER_THREE, NUMBER_FOUR, NUMBER_FIVE, NUMBER_SIX, NUMBER_SEVEN, NUMBER_EIGHT,NUMBER_NINE,NUMBER_ZERO,
	OM_NUMBER_0, OM_NUMBER_1, OM_NUMBER_2, OM_NUMBER_3, OM_NUMBER_4,
	OM_NUMBER_5, OM_NUMBER_6, OM_NUMBER_7, OM_NUMBER_8, OM_NUMBER_9,
	OM_NUMBER_X,

	/*BUTTONS*/
	BUTTON_QUIT,		BUTTON_QUIT_HIGHLIGHTED,
	BUTTON_MOUSE,		BUTTON_MOUSE_HIGHLIGHTED,
	BUTTON_BACK,		BUTTON_BACK_HIGHLIGHTED,
	BUTTON_PLAY,		BUTTON_PLAY_HIGHLIGHTED,
	BUTTON_OPTIONS,		BUTTON_OPTIONS_HIGHLIGHTED,
	BUTTON_MAINMENU,	BUTTON_MAINMENU_HIGHLIGHTED,
	BUTTON_CREDITS,		BUTTON_CREDITS_HIGHLIGHTED,
	BUTTON_DEFAULT,		BUTTON_DEFAULT_HIGHLIGHTED,
	BUTTON_GAMMA,		BUTTON_GAMMA_HIGHLIGHTED,
	BUTTON_SFX,			BUTTON_SFX_HIGHLIGHTED,
	BUTTON_MUSIC,		BUTTON_MUSIC_HIGHLIGHTED,
	BUTTON_NO,			BUTTON_NO_HIGHLIGHTED,
	BUTTON_YES,			BUTTON_YES_HIGHLIGHTED,
	BUTTON_EASY,		BUTTON_EASY_HIGHLIGHTED,
	BUTTON_NORMAL,		BUTTON_NORMAL_HIGHLIGHTED,
	BUTTON_HARD,		BUTTON_HARD_HIGHLIGHTED,
	BUTTON_RESUME,		BUTTON_RESUME_HIGHLIGHTED,
	BUTTON_START,		BUTTON_START_HIGHLIGHTED,
	BUTTON_RESOLUTION,	BUTTON_RESOLUTION_HIGHLIGHTED,
	BUTTON_ENABLED,		BUTTON_ENABLED_HIGHLIGHTED,
	BUTTON_DISABLED,	BUTTON_DISABLED_HIGHLIGHTED,
	BUTTON_GAMEPAD,		BUTTON_GAMEPAD_HIGHLIGHTED,
	BUTTON_CANCEL,		BUTTON_CANCEL_HIGHLIGHTED,
	BUTTON_ACCEPT,		BUTTON_ACCEPT_HIGHLIGHTED,
	BUTTON_LEFTARROW,	BUTTON_LEFTARROW_HIGHLIGHTED,
	BUTTON_RIGHTARROW,	BUTTON_RIGHTARROW_HIGHLIGHTED,
	BUTTON_MM,

	/*BACKGROUNDS*/
	M_TUTORIAL_BACKGROUND,
	M_PAUSE_BG,
	M_KEYBOARD_BACKGROUND_1024x768,
	M_KEYBOARD_BACKGROUND_1280x720,
	M_CONTROLLER_BACKGROUND_1280x720,
	M_CONTROLLER_BACKGROUND_1024x768,
	M_GP_BACKGROUND,
	M_STUDIO_BACKGROUND,
	M_TEAM_BACKGROUND,
	M_BLACK_BACKGROUND,
	M_CREDITS_BACKGROUND_1024x768,
	M_CREDITS_BACKGROUND_1280x720,
	M_OPTIONS_BACKGROUND_1024x768,
	M_OPTIONS_BACKGROUND_1280x720,
	M_MAIN_BACKGROUND_1024x768,
	M_MAIN_BACKGROUND_1280x720,
	M_WIN_BACKGROUND_1024x768,
	M_WIN_BACKGROUND_1280x720,
	M_LOSE_BACKGROUND_1024x768,
	M_LOSE_BACKGROUND_1280x720, 
	M_DIFFICULTY_BACKGROUND_1024x768,
	M_DIFFICULTY_BACKGROUND_1280x720,
	M_CRITICALMASS_MM_BACKGROUND_1280x720,
	M_CONTROLLER_BACKGROUND,
	M_KEYBOARD_BACKGROUND,
	QUITGAME,
	M_LOSE_BACKGROUND,
	M_WIN_BACKGROUND,
	M_BOARDER,

	MUZZLEFLASH1,MUZZLEFLASH2,
	DUST,
	BULLET_TRAIL,
	SMALL_ENEMY_DAMAGE,
	BLOOD_POOL,
	HP_ARROW,
	ENERGY_RING,
	BOLT_1, BOLT_2, BOLT_3,

	MAX_TEXTURES };


enum eVFXAnimTypes { GEO_SCALING_BOX_ANIM = 0, GEO_SCALING_CONE_ANIM,GEO_BEACON_ANIM, MAX_FX_ANIMS};

enum eVFXTextureTypes {WHITE_PARTICLE, DUST_TEXTURE, MAX_FX_TEXTURES};


// For Behavior Tree
enum BehaviorReturnCode
{
	Failure = 0,
	Success,
	Running,
	Error,
};

enum Enemy_State
{
	Enemy_Idle = 0,
	Enemy_Chasing,
	Enemy_Charging,
	Enemy_Attacking,

	// Negative States
	Enemy_NegativeState,
	Enemy_Stunned,
	Enemy_Vulnerable,
	Enemy_Pushed,

	Enemy_Dying,
	Enemy_Dead,

	Enemy_NumStates,
};

// Helpful Macros
#define SAFE_DELETE(x) if( x ) { delete(x); (x) = nullptr; }
#define SAFE_DELETE_ARRAY(x) if( x ) { delete [] (x); (x) = nullptr; }
#define GET_VARIABLE_NAME(x) #x

#endif
